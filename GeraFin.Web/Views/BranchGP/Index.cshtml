@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
   ViewData["Title"] = "BranchGP";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
   <section class="content-header" id="content-Page-header">
      <h1>
         @ViewData["Title"]
      </h1>
      <ol class="breadcrumb">
         <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
         <li><a href="/BranchGP/Index">@ViewData["Title"]</a></li>
      </ol>
   </section>
   <!-- Main content -->
   <section class="content">
      <!-- Default box -->
      <div class="box">
         <div class="box-header with-border">
            <h3 class="box-title text-primary"><i class="fa fa-building"></i> @ViewData["Title"]</h3>

            <div class="box-tools pull-right">
               <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse">
                  <i class="fa fa-minus"></i>
               </button>

               <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                  <i class="fa fa-times"></i>
               </button>
            </div>
         </div>
         <div class="box-body">
            <div id="Grid"></div>
         </div>
      </div>
      <!-- /.box-body -->
      <div class="box-footer"></div>
      <!-- /.box-footer-->
   </section>
</div>
<!-- /.box -->
<!-- /.content -->
<!-- /.content-wrapper -->
@section Styles{

}

@section Scripts{

   <script type="text/javascript">

        var Permission = @Convert.ToBoolean(HttpContextAccessor.HttpContext.Session.GetInt32("_IsAdmin")).ToString().ToLower();

        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/BranchGP",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            var dataManagerBranch = ej.DataManager({
                url: "/api/Branch",
                adaptor: new ej.WebApiAdaptor()
            });

            dataManager.ready.done(function (e) {
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/Branch/BranchGP",
                        updateUrl: "/api/Branch/BranchGP",
                        removeUrl: "/api/Branch/BranchGP",
                    }),

                   toolbarSettings: {
                      showToolbar: true,
                      toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"],
                   },

                   editSettings: {
                      allowEditing: Permission,
                      allowAdding: Permission,
                      allowDeleting: Permission,
                      showDeleteConfirmDialog: false,
                      editMode: "dialog",
                   },

                   toolbarClick: function (args) {
                      if (args.itemName == 'Delete' && this.getSelectedRecords().length) {
                         $("modal-danger").modal()
                      }
                   },

                   isResponsive: true,
                   enableResponsiveRow: true,
                   allowSorting: true,
                   allowSearching: true,
                   allowFiltering: true,
                   filterSettings: {
                      filterType: "excel",
                      maxFilterChoices: 100,
                      enableCaseSensitivity: false
                   },
                    allowPaging: true,
                    pageSettings: { pageSize: 25, printMode: ej.Grid.PrintMode.CurrentPage },
                   columns: [
                      { field: "GPId", headerText: 'GPId', isPrimaryKey: true, isIdentity: true, visible: false },
                      { field: "BranchId", headerText: 'Unit', foreignKeyField: "BranchId", defaultValue: 1, foreignKeyValue: "BranchName", dataSource: dataManagerBranch, visible: Permission },
                      { field: "Day", headerText: 'Day' },
                      { field: "Month", headerText: 'Month' },
                      { field: "Income", headerText: 'Income', editType: "numericedit", format: "R" + " " + "{0:n2}" },
                      { field: "Costs", headerText: 'Costs', editType: "numericedit", format: "R" + " " + "{0:n2}" },
                      { field: "PreliminaryGP", headerText: 'Prelim GP', editType: "numericedit", format: "R" + " " + "{0:n2}" },
                      { field: "PreliminaryGPPerc", headerText: 'Prelim GP %', editType: "numericedit", format: "{0:n2}" + " " + "%" },
                      { field: "Variances", headerText: 'Variances'},
                      { field: "FinalGP", headerText: 'Final GP', editType: "numericedit", format: "R" + " " + "{0:n2}" },
                      { field: "FinalGPPerc", headerText: 'Final GP %', editType: "numericedit", format: "{0:n2}" + " " + "%" },
                      { field: "TotalInvoices", headerText: 'Total Invoices', editType: "numericedit", format: "R" + " " + "{0:n2}" },
                      { field: "TotalPurchases", headerText: 'Total Purchases', editType: "numericedit", format: "R" + " " + "{0:n2}" },
                      { field: "Balance", headerText: 'Balance'},
                    ],
                    actionComplete: "complete",
                });
            });
        });

        function complete(args) {
           if (args.requestType == 'beginedit') {

                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
       }
   </script>
}

