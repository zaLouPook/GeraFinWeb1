@using System.Linq;
@using Microsoft.AspNetCore.Http;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model GeraFin.Models.ViewModels.GeraFinWeb.WeeklySignOff

@{
   ViewData["Title"] = "Weekly SignOff Detail";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
   <section class="content-header" id="content-Page-header">
      <h1>
         @ViewData["Title"]
      </h1>
      <ol class="breadcrumb">
         <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
         <li><a href="/WeeklySignOff/Index">Weekly Sign Off</a></li>
         <li><a href="/WeeklySignOff/Detail/?id=@Model.WeeklySignOffId#">@ViewData["Title"]</a></li>
      </ol>
   </section>
   <!-- Main content -->
   <section class="content">
      <!-- Default box -->
      <div class="box" id="GeraFinTop">
         <div class="Invoice-logo">

         </div>
         <table style="width:100%; border:3px solid;">
            <tr style="background-color:#367fa9; color:#fff">
               <th width="50%">
                  GERATEC
               </th>
               <th width="50%">
                  UNIT DETAILS
               </th>
            </tr>
            <tr>
               <td>
                  PO Box 5342
               </td>
               <td>
                  @Model.CustomerRefNumber
               </td>
            </tr>
            <tr>
               <td>
                  Tyger Valley
               </td>
               <td>
                  @{
                     var OrderDate1 = Model.OrderDate.ToString("yyyy-MM-dd");
                  }
                  @Html.DisplayFor(model => OrderDate1)
               </td>
            </tr>
            <tr>
               <td>
                  7536
               </td>
               <td>
                  SO Status: Completed
               </td>
            </tr>
         </table>

         <br />

         <table style="width:100%; border:3px solid;">
            <tr style="background-color:#367fa9; color:#fff; border:1px solid;">
               <th style="width:33%; border:1px solid;">
                  DATE
               </th>
               <th style="width:33%; border:1px solid;">
                  FSM SIGN OFF
               </th>
               <th style="width:33%; border:1px solid;">
                  UNIT MANAGER SIGN OFF
               </th>
            </tr>
            <tr>
               @{
                  var CloseDate = Model.WeekEnd.ToString("yyyy-MM-dd");
               }
               <td style="width:33%; border:1px solid;">
                  Week Start: @Html.DisplayFor(model => OrderDate1) <br />
                  Week Close: @Html.DisplayFor(model => CloseDate)
               </td>
               <td style="width:33%; border:1px solid;">
               </td>
               <td style="width:33%; border:1px solid;">
               </td>
            </tr>
         </table>

         <div class="box-header with-border">

         </div>
      </div>
      <!-- /.box -->
      <div class="box" id="AppendBefore">
         <div class="box-body">
            <div class="row">
               <div class="col-lg-12">
                  <div id="Grid"></div>
               </div>
            </div>
            <div class="row">
               <div class="col-lg-8">

               </div>
               <div class="col-lg-4">
                  <table style="width:100%; border:2px solid;">
                     <tr style="background-color:#367fa9; color:#fff; border:2px solid;">
                        <th style="width:25%; border:2px solid;">
                           Weekly Total QTY
                        </th>
                        <th style="width:25%; border:2px solid;">
                           Weekly Total R
                        </th>
                     </tr>
                     <tr>
                        <td id="WeeklyCount">@Model.WeeklyCount</td>
                        <td id="WeeklyAmout">R @Model.WeeklyAmout</td>
                     </tr>
                  </table>
               </div>
            </div>
         </div>
      </div>
   </section>
   <!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Styles{

}

@section Scripts{

   <script type="text/javascript">

        function beforePrint(args) {

            var head = args.element.find(".e-gridheader thead");
            head.insertBefore(args.element.find(".e-gridcontent table tbody"));
            document.getElementById("AppendBefore").style.display = "none";
            $(".GeraFinTop").css('display', 'block');
            args.element.prepend($(".box"));
        }

      $(function () {

         var dataManager = ej.DataManager({
            url: "/api/WeeklySignOffLine",
            adaptor: new ej.WebApiAdaptor(),
            headers: [{ "WeeklySignOffId": @Model.WeeklySignOffId}],
            offline: true
         });

         var dataManagerBranch = ej.DataManager({
            url: "/api/Branch",
            adaptor: new ej.WebApiAdaptor()
         });

         $('#BranchId').ejDropDownList({
            dataSource: dataManagerBranch,
            fields: { id: 'BranchId', text: 'BranchName', value: 'BranchId' },
            value: @Model.BranchId,
            enabled: false,
         });

         dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
               dataSource: ej.DataManager({
                  json: e.result,
                  adaptor: new ej.remoteSaveAdaptor(),
                  insertUrl: "/api/WeeklySignOffLine/Insert",
                  updateUrl: "/api/WeeklySignOffLine/Update",
                  removeUrl: "/api/WeeklySignOffLine/Remove",
               }),
               toolbarSettings: {
                  showToolbar: true,
                  toolbarItems: ["add", "edit", "delete", "update", "cancel", "printGrid"]
               },
               editSettings: {
                  allowEditing: false,
                  allowAdding: false,
                  allowDeleting: false,
                  showDeleteConfirmDialog: false,
               },

               toolbarClick: function (args) {
                  if (args.itemName == 'Delete' && this.getSelectedRecords().length) {
                     $("#modal-info").modal()
                  }
               },

               isResponsive: true,
               enableResponsiveRow: true,
               allowSorting: true,
               allowSearching: true,
               allowFiltering: true,
               filterSettings: {
                  filterType: "excel",
                  maxFilterChoices: 100,
                  enableCaseSensitivity: false
               },
               allowPaging: true,
               pageSettings: {
                  pageSize: 25, printMode: ej.Grid.PrintMode.AllPages
               },

               columns: [
                  { field: "ProductName", headerText: 'Item Name', defaultValue: 0, width: 200 },
                  { field: "Price", headerText: 'Price', defaultValue: 0, editType: "numericedit", format: "R " + "{0:n2}", allowEditing: false },
                  { field: "Tue",  headerText: 'Tue', defaultValue: 0, allowEditing: false },
                  { field: "Wed",  headerText: 'Wed', defaultValue: 0, allowEditing: false },
                  { field: "Thu",  headerText: 'Thu', defaultValue: 0, allowEditing: false },
                  { field: "Fri",  headerText: 'Fri', defaultValue: 0, allowEditing: false },
                  { field: "Sat",  headerText: 'Sat', defaultValue: 0, allowEditing: false },
                  { field: "Sun",  headerText: 'Sun', defaultValue: 0, allowEditing: false },
                  { field: "Mon",  headerText: 'Mon', defaultValue: 0, allowEditing: false },
                  { field: "QTY", headerText: 'Total_QTY', defaultValue: 0, allowEditing: false },
                  { field: "ZAR", headerText: 'Total_R', defaultValue: 0, allowEditing: false, editType: "numericedit", format: "R " + "{0:n2}" },
               ],
               beforePrint: "beforePrint",
               actionComplete: "complete",
            });
         });
      });

      function complete(args) {

         if (args.requestType == 'beginedit') {
            $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
         }
         if (args.requestType == 'save' || args.requestType == 'delete') {
            RewriteTotal(args.data.SalesOrderId);
         }
      }

      function RewriteTotal(Wee) {
         $.ajax({
            type: 'GET',
            url: '/api/WeeklySignOffLine/GetById/' + WeeklySignOffId,
            success: function (data) {
               $('#WeeklyCount').text(data.Amount);
               $('#WeeklyAmout').text(data.SubTotal);
            }
         });
      }
   </script>
}